// <auto-generated />
using System;
using IWant.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IWant.API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241228081715_Capital properties")]
    partial class Capitalproperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IWant.API.Data.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin",
                            Score = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("IWant.API.Data.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VietnameseText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WordCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordCategoryId");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(5604),
                            EnglishText = "I",
                            ImagePath = "",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(5798),
                            VietnameseText = "Con",
                            WordCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(6513),
                            EnglishText = "Want To",
                            ImagePath = "",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(6515),
                            VietnameseText = "Muốn"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(6519),
                            EnglishText = "Eat",
                            ImagePath = "",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(6519),
                            VietnameseText = "Ăn",
                            WordCategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(6522),
                            EnglishText = "Drink",
                            ImagePath = "",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(6522),
                            VietnameseText = "Uống",
                            WordCategoryId = 2
                        });
                });

            modelBuilder.Entity("IWant.API.Data.WordCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VietnameseName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("WordCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(3316),
                            EnglishName = "Subject",
                            ImagePath = "",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(3551),
                            VietnameseName = "Chủ từ"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(4116),
                            EnglishName = "Verb",
                            ImagePath = "",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 12, 28, 15, 17, 13, 123, DateTimeKind.Local).AddTicks(4116),
                            VietnameseName = "Động từ"
                        });
                });

            modelBuilder.Entity("IWant.API.Data.Word", b =>
                {
                    b.HasOne("IWant.API.Data.WordCategory", "WordCategory")
                        .WithMany()
                        .HasForeignKey("WordCategoryId");

                    b.Navigation("WordCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
