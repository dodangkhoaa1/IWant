// <auto-generated />
using System;
using IWant.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IWant.API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IWant.API.Data.Player", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("score")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            id = 1,
                            password = "admin",
                            score = 0,
                            username = "admin"
                        });
                });

            modelBuilder.Entity("IWant.API.Data.Word", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("imagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("wordCategoryId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("wordCategoryId");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(2293),
                            imagePath = "",
                            status = true,
                            text = "Con",
                            updatedAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(2494),
                            wordCategoryId = 1
                        },
                        new
                        {
                            id = 2,
                            createdAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(3248),
                            imagePath = "",
                            status = true,
                            text = "Muốn",
                            updatedAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(3250)
                        },
                        new
                        {
                            id = 3,
                            createdAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(3254),
                            imagePath = "",
                            status = true,
                            text = "Ăn",
                            updatedAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(3254),
                            wordCategoryId = 2
                        },
                        new
                        {
                            id = 4,
                            createdAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(3256),
                            imagePath = "",
                            status = true,
                            text = "Uống",
                            updatedAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(3257),
                            wordCategoryId = 2
                        });
                });

            modelBuilder.Entity("IWant.API.Data.WordCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("imagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("WordCategories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(2024, 12, 13, 15, 8, 9, 629, DateTimeKind.Local).AddTicks(9871),
                            imagePath = "",
                            name = "Chủ từ",
                            status = true,
                            updatedAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(119)
                        },
                        new
                        {
                            id = 2,
                            createdAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(737),
                            imagePath = "",
                            name = "Động từ",
                            status = true,
                            updatedAt = new DateTime(2024, 12, 13, 15, 8, 9, 630, DateTimeKind.Local).AddTicks(738)
                        });
                });

            modelBuilder.Entity("IWant.API.Data.Word", b =>
                {
                    b.HasOne("IWant.API.Data.WordCategory", "wordCategory")
                        .WithMany()
                        .HasForeignKey("wordCategoryId");

                    b.Navigation("wordCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
