@model List<AccountViewModel>

@{
    ViewData["Title"] = "Manage Account";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .account-container {
        max-width: 1400px;
        margin: 20px auto;
        padding: 20px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    }

    .account-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 16px;
    }

        .account-header h2 {
            margin: 0;
            font-size: 1.8rem;
            font-weight: 800;
            color: #e67e22;
        }

    .account-table thead th {
        background-color: #e9ecef !important;
        color: #6c757d !important;
        border-bottom: 4px solid #FEDA15;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .account-table tbody tr {
        height: 80px;
    }

        .account-table tbody tr td {
            height: 80px;
            vertical-align: middle;
        }

    .account-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 50%;
        border: 1px solid #FEDA15;
    }

    .account-table tbody tr:hover {
        background-color: #f9f9f9;
    }

    .btn {
        margin: 0 2px;
    }

    .table-wrapper {
        height: 800px;
        overflow: hidden;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 20px 0;
    }

        .pagination a.page-btn,
        .pagination span.page-btn {
            display: inline-block;
            background-color: #fff;
            color: #000;
            border: 2px solid #FEDA15;
            padding: 8px 12px;
            margin: 0 4px;
            border-radius: 4px;
            text-decoration: none;
            font-size: 0.9rem;
        }

            .pagination a.page-btn:hover {
                background-color: #f9f9f9;
            }

            .pagination span.page-btn.active {
                background-color: #FEDA15;
                color: #000;
                font-weight: bold;
            }

    .account-table .btn.btn-danger,
    .account-table .btn.btn-primary {
        background-color: #fff !important;
        color: #000 !important;
        border: 2px solid #FEDA15 !important;
    }

        .account-table .btn.btn-danger:hover,
        .account-table .btn.btn-primary:hover {
            background-color: #fff !important;
            color: #000 !important;
            border: 2px solid #FEDA15 !important;
        }
</style>

<div class="">
    <div class="account-header">
        <h2>Manage Accounts</h2>
    </div>
    <div class="card-body">
        <div class="table-wrapper">
            <table class="table account-table">
                <thead class="table-dark">
                    <tr>
                        <th>Avatar</th>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var account in Model)
                    {
                        if (account.Id == "0bcbb4f7-72f9-435f-9cb3-1621b4503974") continue;
                        <tr>
                            <td>
                                <img class="account-image" src="@account.ImageUrl" alt="AvatarAccount" />
                            </td>
                            <td>@account.FullName</td>
                            <td>@account.Email</td>
                            <td>@(account.Status ? "Active" : "Banned")</td>
                            <td>
                                @if (account.Status)
                                {
                                    <button class="btn btn-danger" onclick="openBanModal('@account.Id', '@account.FullName')">Banned</button>
                                }
                                else
                                {
                                    <form method="post" action="@Url.Action("UpdateStatus")" style="display:inline;">
                                        <input type="hidden" name="id" value="@account.Id" />
                                        <button type="submit" class="btn btn-success">Active</button>
                                    </form>
                                }
                                <a asp-action="AccountDetail" asp-route-id="@account.Id" class="btn btn-primary">Detail</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="pagination"></div>
    </div>
</div>

<div class="modal fade" id="banModal" tabindex="-1" aria-labelledby="banModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="banModalLabel">Ban User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to ban <strong id="banUserName"></strong>?</p>
                <form id="banForm" method="post" action="@Url.Action("UpdateStatus")">
                    <input type="hidden" name="id" id="banUserId" />
                    <div class="mb-3">
                        <label for="banReason" class="form-label">Reason for banning</label>
                        <textarea class="form-control" name="reason" id="banReason" required></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Confirm Ban</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openBanModal(userId, userName) {
        document.getElementById('banUserId').value = userId;
        document.getElementById('banUserName').innerText = userName;
        var banModal = new bootstrap.Modal(document.getElementById('banModal'));
        banModal.show();
    }

    document.addEventListener("DOMContentLoaded", function () {
        var tableBody = document.querySelector(".account-table tbody");
        var rows = tableBody.querySelectorAll("tr");
        var rowsPerPage = 10;
        var currentPage = 1;
        var totalPages = Math.ceil(rows.length / rowsPerPage);
        var paginationContainer = document.querySelector(".pagination");

        function showPage(page) {
            currentPage = page;
            rows.forEach(function (row, index) {
                row.style.display = "none";
                if (index >= (page - 1) * rowsPerPage && index < page * rowsPerPage) {
                    row.style.display = "";
                }
            });
            updatePagination();
            document.querySelector(".account-container").scrollIntoView({ behavior: "smooth" });
        }

        function updatePagination() {
            paginationContainer.innerHTML = "";
            var prevBtn = document.createElement("a");
            prevBtn.href = "#";
            prevBtn.className = "page-btn";
            prevBtn.textContent = "Previous";
            prevBtn.addEventListener("click", function (e) {
                e.preventDefault();
                if (currentPage > 1) {
                    showPage(currentPage - 1);
                }
            });
            paginationContainer.appendChild(prevBtn);

            for (var i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    var span = document.createElement("span");
                    span.className = "page-btn active";
                    span.textContent = i;
                    paginationContainer.appendChild(span);
                } else {
                    var pageLink = document.createElement("a");
                    pageLink.href = "#";
                    pageLink.className = "page-btn";
                    pageLink.textContent = i;
                    pageLink.addEventListener("click", (function (page) {
                        return function (e) {
                            e.preventDefault();
                            showPage(page);
                        };
                    })(i));
                    paginationContainer.appendChild(pageLink);
                }
            }

            var nextBtn = document.createElement("a");
            nextBtn.href = "#";
            nextBtn.className = "page-btn";
            nextBtn.textContent = "Next";
            nextBtn.addEventListener("click", function (e) {
                e.preventDefault();
                if (currentPage < totalPages) {
                    showPage(currentPage + 1);
                }
            });
            paginationContainer.appendChild(nextBtn);
        }

        if (rows.length > 0) {
            showPage(1);
        }
    });
</script>
