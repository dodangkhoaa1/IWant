@model ChangePasswordViewModel
@{
    ViewData["Title"] = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<link rel="stylesheet" href="~/css/main.css" />
<link rel="stylesheet" href="~/css/responsive.css" />
<link rel="stylesheet" href="~/css/site.css" />

<style>
    .changepassword-container {
        background-color: #FEDA15;
        padding: 40px;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .changepassword-card {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 10px;
        background-color: #fff;
        max-width: 500px;
        width: 100%;
        padding: 30px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        height: 450px;
        overflow: hidden;
        z-index: 2;
        flex-grow: 1;
    }

    .changepassword-form {
        width: 100%;
        max-width: 400px;
    }

    .changepassword-title {
        font-size: 32px;
        font-weight: bold;
        margin-bottom: 20px;
        text-align: center;
    }

    .input-group {
        margin-bottom: 20px;
    }

    .custom-input {
        width: 100%;
        padding: 10px;
        border: none;
        border-bottom: 2px solid #000;
    }

    .button-container {
        display: flex;
        justify-content: center;
    }

    .reset-password-button {
        width: 90%;
        padding: 12px;
        background-color: #FEDA15;
        border: none;
        border-radius: 10px;
        color: #fff;
        font-size: 16px;
        font-weight: bold;
        margin-top: 10px;
        cursor: pointer;
    }

</style>

<div class="changepassword-container">
    <div class="confetti-container"></div>
    <div class="changepassword-card">
        <form asp-action="ResetPassword" method="post" class="changepassword-form">
            <h1 class="changepassword-title">Change Password</h1>

            <div class="input-group">
                <input type="password" asp-for="CurrentPassword" placeholder="Current Password" class="custom-input" />
                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
            </div>

            <div class="input-group">
                <input type="password" asp-for="NewPassword" placeholder="New Password" class="custom-input" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <div class="input-group">
                <input type="password" asp-for="ConfirmPassword" placeholder="Confirm Password" class="custom-input" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <div class="button-container">
                <button type="submit" class="reset-password-button">Change Password</button>
            </div>
        </form>
    </div>
</div>




@* confetti background animation *@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const confettiContainer = document.querySelector('.confetti-container');

        function createConfetti() {
            const confetti = document.createElement('div');
            confetti.classList.add('confetti');
            confetti.style.left = Math.random() * 100 + 'vw';
            confetti.style.backgroundColor = getRandomColor();
            confetti.style.animationDuration = Math.random() * 2 + 3 + 's';
            confetti.style.width = Math.random() * 5 + 2 + 'px';
            confetti.style.height = Math.random() * 25 + 15 + 'px';

            confettiContainer.appendChild(confetti);

            setTimeout(() => confetti.remove(), 5000);
        }

        function getRandomColor() {
            const colors = [
                '#FFD700', '#FF4500', '#1E90FF', '#32CD32', '#FF69B4', '#8A2BE2',
                '#FF6347', '#00FA9A', '#9400D3', '#FF7F50', '#00CED1', '#FFB6C1',
                '#4B0082', '#ADFF2F'
            ];
            return colors[Math.floor(Math.random() * colors.length)];
        }

        setInterval(createConfetti, 200);
    });
</script>


