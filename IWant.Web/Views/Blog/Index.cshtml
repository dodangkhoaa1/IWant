@model IEnumerable<IWant.Web.Models.BlogViewModel>

@{
    ViewData["Title"] = "Manage Blog";
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    bool? isWaiting;

    string filterWaiting = "Waiting";
    string filterShow = "Show";
    string filterHide = "Hide";
}

@if (User.IsInRole("Member"))
{
    <style>
        .body {
            padding-top: 70px !important;
            min-height: 70vh;
            padding-bottom: 30px;
            background-color: #FEDA15;
        }

        .container-blog {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
            background: #fff;
            margin-top: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 6px black;
        }

        .table-container {
            min-height: 350px;
        }
    </style>
}

<style>
    .transactions-header-right {
        display: flex;
        align-items: center;
        gap: 10px;
        justify-content: flex-end;
        margin-bottom: 10px;
    }

    .btn-filter, .btn-create {
        display: inline-block;
        border: 2px solid #FEDA15;
        padding: 8px 16px;
        font-size: 0.9rem;
        color: #000000;
        background-color: transparent;
        border-radius: 4px;
        text-decoration: none;
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
    }

        .btn-filter:hover, .btn-create:hover {
            background: #FEDA15;
            color: #000000;
        }

    .btn-filter-all{
        display: inline-block;
        border: 2px solid #FEDA15;
        padding: 8px 16px;
        font-size: 0.9rem;
        color: #000000;
        background-color: transparent;
        border-radius: 4px;
        text-decoration: none;
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
    }

        .btn-filter-all:hover{
            background: #FEDA15;
            color: #000000;
        }

    .btn-filter-show {
        display: inline-block;
        border: 2px solid rgba(25,135,84,1);
        padding: 8px 16px;
        font-size: 0.9rem;
        color: #000000;
        background-color: transparent;
        border-radius: 4px;
        text-decoration: none;
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
    }

        .btn-filter-show:hover {
            background: rgba(25,135,84,1);
            color: white;
        }

    .btn-filter-hide {
        display: inline-block;
        border: 2px solid rgba(220,53,69,1);
        padding: 8px 16px;
        font-size: 0.9rem;
        color: #000000;
        background-color: transparent;
        border-radius: 4px;
        text-decoration: none;
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
    }

        .btn-filter-hide:hover {
            background: rgba(220,53,69,1);
            color: white;
        }

    .btn-filter-waiting {
        display: inline-block;
        border: 2px solid #6f42c1;
        padding: 8px 16px;
        font-size: 0.9rem;
        color: #000000;
        background-color: transparent;
        border-radius: 4px;
        text-decoration: none;
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
    }

        .btn-filter-waiting:hover {
            background: #6f42c1;
            color: white;
        }


    .table-container {
        width: 100%;
        height: 590px;
        overflow: hidden;
    }

    .table-fixed {
        table-layout: fixed;
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
    }

        .table-fixed thead {
            background-color: #EEEEEE;
        }

            .table-fixed thead th {
                text-align: left;
                padding: 12px;
                font-size: 0.9rem;
                color: #6c757d;
                border-bottom: 4px solid #f1c40f;
                font-weight: 600;
            }

                .table-fixed thead th:nth-child(2) {
                    width: 20%;
                }

        .table-fixed tbody tr {
            border-bottom: 1px solid #dee2e6;
            height: 100px;
        }

            .table-fixed tbody tr:hover {
                background-color: #f6f6f6;
            }

        .table-fixed td {
            padding: 12px;
            font-size: 0.9rem;
            color: #333;
            vertical-align: middle;
            word-wrap: break-word;
            overflow: hidden;
        }

    .content-cell {
        height: 50px;
        overflow: hidden;
        width: 25%;
    }

    th.sortable:hover {
        cursor: pointer;
        text-decoration: underline;
    }

    .badge {
        display: inline-block;
        padding: 0.35em 0.65em;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 0.375rem;
        text-transform: capitalize;
    }

        .badge.bg-waiting {
            background-color: #6f42c1;
            color: #fff;
        }

    .img-thumbnail {
        border-radius: 6px;
    }

    .btn-sm {
        padding: 4px 8px;
        font-size: 0.8rem;
        margin: 2px 0;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 16px;
        gap: 4px;
    }

        .pagination a {
            display: inline-block;
            padding: 6px 12px;
            background: #fff;
            color: #000000;
            border: 1px solid #FEDA15;
            border-radius: 4px;
            text-decoration: none;
            font-size: 0.875rem;
            transition: background 0.2s;
        }

            .pagination a:hover {
                background: #FAF0E6;
                color: #000000;
            }

    .game-header {
        text-align: center;
    }

        .game-header h1 {
            font-size: 3rem;
            font-weight: bold;
        }

        .game-header p {
            font-size: 1rem;
            color: #364d59;
            position: relative;
            margin: 0;
        }

            .game-header p::after {
                content: "";
                display: block;
                width: 50%;
                height: 1px;
                justify-content: center;
                background-color: #364d59;
                margin: 10px auto;
            }





    #pagination {
        margin-top: 10px;
        text-align: center;
    }

        #pagination button {
            padding: 5px 10px;
            margin: 2px;
            border: 1px solid #ccc;
            background-color: white;
            cursor: pointer;
        }

            #pagination button.active {
                background-color: #FEDA15;
                color: white;
            }

    /* .btn-filter {
                    margin: 5px;
                    padding: 8px 12px;
                    border: none;
                    background-color: #17a2b8;
                    color: white;
                    cursor: pointer;
                    border-radius: 5px;
                }

                    .btn-filter:hover {
                        background-color: #138496;
                    } */
</style>

<div class="@(User.IsInRole("Member") == true ? "container-blog" : "")">
    <div class="game-header">
        <h1>LIST OF BLOGS</h1>
        <p></p>
    </div>
    <div class="transactions-header-right d-flex justify-content-between">

        <div class="filter">
            <a asp-action="Index" asp-controller="Blog" asp-route-filterType="all" class="btn-filter-all">All</a>
            <a asp-action="Index" asp-controller="Blog" asp-route-filterType="show" class="btn-filter-show">Show</a>
            <a asp-action="Index" asp-controller="Blog" asp-route-filterType="hide" class="btn-filter-hide">Hide</a>
            <a asp-action="Index" asp-controller="Blog" asp-route-filterType="waiting" class="btn-filter-waiting">Waiting</a>
        </div>

        <div class="sort">
            <button class="btn-filter" onclick="sortByDate()">Sort by Date</button>
            <a asp-action="Create" class="btn-create">@(User.IsInRole("Admin") ? "+ Create" : "+ Submit")</a>
        </div>
    </div>
    <div class="table-container">
        <table class="table-fixed">
            <thead>
                <tr>
                    <th style="width:12%">Author</th>
                    <th style="width:18%">Title</th>
                    <th style="width:20%">Content</th>
                    <th style="width:5%">Views</th>
                    <th style="width:12%">Date</th>
                    <th style="width:6%">Status</th>
                    <th style="width:8%">Image</th>
                    <th style="width:19%" class="text-center">Action</th>
                </tr>
            </thead>
            <tbody id="blogTableBody">
                @if (Model.Count() == 0)
                {
                    <tr>
                        <td colspan="8" class="text-center">No blog found</td>
                    </tr>
                }
                @foreach (var blog in Model.OrderByDescending(b => b.CreatedAt))
                {
                    <tr style="height:105px">
                        <td>@blog.User.FullName</td>
                        <td>@blog.Title</td>
                        <td class="content-cell">@Html.Raw(blog.Content)</td>
                        <td>@blog.ViewCount</td>
                        <td>@blog.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            <span class="badge @(blog.Status == true ? "bg-success" : blog.Status == false ? "bg-danger" : "bg-waiting")">
                                @(blog.Status == true ? "Show" : blog.Status == false ? "Hide" : "Waiting")
                            </span>
                        </td>
                        <td>
                            <img src="@blog.ImageUrl" alt="Blog Image" class="img-thumbnail" style="max-width: 80px;" />
                        </td>
                        <td class="text-center">
                            @if (User.IsInRole("Member") && blog.Status != true && blog.Status != false)
                            {
                                <a style="width:72px" asp-action="Edit" asp-route-id="@blog.Id" class="btn btn-warning btn-sm">Edit</a>
                            }
                            @if (User.IsInRole("Admin"))
                            {
                                <a style="width:72px" asp-action="Details" asp-route-id="@blog.Id" class="btn btn-warning btn-sm">Details</a>
                                @if (blog.Status == true)
                                {
                                    <form asp-action="DeleteConfirmed" asp-route-id="@blog.Id" method="post" class="d-inline">
                                        <button style="width:72px" type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure to hide this blog?');">Hide</button>
                                    </form>
                                    <a style="width:72px" asp-action="BlogDetail" asp-route-id="@blog.Id" class="btn btn-primary btn-sm">View Blog</a>
                                }
                                else if (blog.Status == false)
                                {
                                    <form asp-action="DeleteConfirmed" asp-route-id="@blog.Id" method="post" class="d-inline">
                                        <button style="width:72px" type="submit" class="btn btn-success btn-sm" onclick="return confirm('Are you sure to show this blog?');">Show</button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-action="AcceptBlog" asp-route-id="@blog.Id" method="post" class="d-inline">
                                        <button style="background-color: #6f42c1; color:white; width:72px" type="submit" class="btn btn-sm" onclick="return confirm('Are you sure to accept this blog?');">Accept</button>
                                    </form>
                                    <form asp-action="RejectBlog" asp-route-id="@blog.Id" method="post" class="d-inline">
                                        <button style="width:72px" type="button" class="btn btn-danger btn-sm" onclick="openRejectModal(@blog.Id)">Reject</button>
                                    </form>
                                }
                            }
                            else if (blog.Status == true)
                            {
                                <a asp-action="BlogDetail" asp-route-id="@blog.Id" class="btn btn-primary btn-sm">View Blog</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="pagination" id="pagination"></div>
</div>

<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filter Blogs</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="filterTitle" class="form-label">Title</label>
                    <input type="text" id="filterTitle" class="form-control" placeholder="Enter title keyword">
                </div>
                <div class="mb-3">
                    <label for="filterDate" class="form-label">Created Date</label>
                    <input type="date" id="filterDate" class="form-control">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="clearFilter()">Clear</button>
                <button type="button" class="btn btn-primary" onclick="applyFilter()">Apply Filter</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Reject Blog</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Please provide a reason for rejecting this blog:</p>
                <textarea id="rejectReason" class="form-control" rows="3" required></textarea>
                <input type="hidden" id="rejectBlogId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="submitRejectForm()">Confirm Reject</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script defer>
        document.addEventListener("DOMContentLoaded", function () {
            const rowsPerPage = 5;
            const tableBody = document.getElementById("blogTableBody");
            const paginationContainer = document.getElementById("pagination");
            let rows = Array.from(tableBody.getElementsByTagName("tr"));
            let currentPage = 1;

            function showPage(page) {
                let start = (page - 1) * rowsPerPage;
                let end = start + rowsPerPage;

                rows.forEach((row, index) => {
                    row.style.display = index >= start && index < end ? "" : "none";
                });

                updatePagination();
            }

            function updatePagination() {
                paginationContainer.innerHTML = "";
                let totalPages = Math.ceil(rows.length / rowsPerPage);

                for (let i = 1; i <= totalPages; i++) {
                    let btn = document.createElement("button");
                    btn.innerText = i;
                    btn.className = "page-btn " + (i === currentPage ? "active" : "");
                    btn.addEventListener("click", function () {
                        currentPage = i;
                        showPage(currentPage);
                    });
                    paginationContainer.appendChild(btn);
                }
            }

            function truncateContentTo20Words() {
                var contentCells = document.querySelectorAll('.content-cell');
                contentCells.forEach(function (cell) {
                    var text = cell.innerText.trim();
                    var words = text.split(/\s+/);
                    if (words.length > 15) {
                        cell.innerText = words.slice(0, 15).join(' ') + ' ...';
                    }
                });
            }

            truncateContentTo20Words();
            showPage(currentPage);
        });

        let isSortedAsc = true;

        function sortByDate() {
            const tableBody = document.getElementById("blogTableBody");
            let rows = Array.from(tableBody.getElementsByTagName("tr"));

            rows.sort((rowA, rowB) => {
                let dateA = new Date(rowA.cells[4].innerText.split(" ")[0].split("/").reverse().join("-"));
                let dateB = new Date(rowB.cells[4].innerText.split(" ")[0].split("/").reverse().join("-"));

                return isSortedAsc ? dateA - dateB : dateB - dateA;
            });

            isSortedAsc = !isSortedAsc;
            tableBody.innerHTML = "";
            rows.forEach(row => tableBody.appendChild(row));

            document.dispatchEvent(new Event("DOMContentLoaded"));
        }

            function openRejectModal(blogId) {
            document.getElementById("rejectBlogId").value = blogId;
            document.getElementById("rejectReason").value = "";
            var modal = new bootstrap.Modal(document.getElementById("rejectModal"));
            modal.show();
        }

        function submitRejectForm() {
            var blogId = document.getElementById("rejectBlogId").value;
            var reason = document.getElementById("rejectReason").value.trim();
            if (reason === "") {
                alert("Please enter a reason for rejection.");
                return;
            }
            var form = document.createElement("form");
            form.method = "POST";
            form.action = "/Blog/RejectBlog";
            var inputId = document.createElement("input");
            inputId.type = "hidden";
            inputId.name = "id";
            inputId.value = blogId;
            form.appendChild(inputId);
            var inputReason = document.createElement("input");
            inputReason.type = "hidden";
            inputReason.name = "reason";
            inputReason.value = reason;
            form.appendChild(inputReason);
            document.body.appendChild(form);
            form.submit();
        }


        //         document.addEventListener("DOMContentLoaded", function () {
        //     const buttons = document.querySelectorAll(".btn-filter");
        //     const tableRows = document.querySelectorAll("#blogTableBody tr");
        //     let activeFilter = "All";

        //     function filterTable(status) {
        //         tableRows.forEach(row => {
        //             const statusCell = row.querySelector("td span.badge");
        //             if (!statusCell) return;

        //             const text = statusCell.textContent.trim();
        //             if (status === "All" || text === status) {
        //                 row.style.display = "";
        //             } else {
        //                 row.style.display = "none";
        //             }
        //         });
        //     }

        //     buttons.forEach(button => {
        //         button.addEventListener("click", function () {
        //             buttons.forEach(btn => btn.classList.remove("active"));
        //             this.classList.add("active");
        //             activeFilter = this.textContent.trim();
        //             filterTable(activeFilter);

        //         });
        //     });

        //     // Set default active button to 'All'
        //     document.querySelector(".btn-filter").classList.add("active");
        //     filterTable("All");
        // });

    </script>
}
